/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode reConstructBinaryTree(int [] pre,int [] in) {
        return constructBinaryTree(pre, 0, pre.length - 1, in, 0, in.length - 1);
    }
    
    private TreeNode constructBinaryTree(int [] pre, int preSt, int preEd,
                                        int [] in, int inSt, int inEd) {
        if (preSt > preEd || inSt > inEd) return null;
        TreeNode root = new TreeNode(pre[preSt]);
        int pos = inSt;
        while (in[pos] != pre[preSt]) pos++;
        if (pos > inEd) return root;
        root.left = constructBinaryTree(pre, preSt + 1, preSt + pos - inSt,
                                       in, inSt, pos - 1);
        root.right = constructBinaryTree(pre, preSt + pos - inSt + 1, preEd,
                                        in, pos + 1, inEd);
        return root;
    }
}