/**
运行时间：52ms
占用内存：9488k
*/

import java.util.ArrayList;
public class Solution {
    public ArrayList<Integer> printMatrix(int [][] matrix) {
        boolean[][] visited = new boolean[matrix.length][matrix[0].length];
        ArrayList<Integer> list = new ArrayList<>();
        int[][] dir = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};
        int dirIndex = 0;
        int cnt = matrix.length * matrix[0].length;
        int x = 0;
        int y = 0;
        while (cnt -- > 0) {
            list.add(matrix[x][y]);
            visited[x][y] = true;
            if (!valid(matrix.length, matrix[0].length, x + dir[dirIndex][0], 
                       y + dir[dirIndex][1], visited)) {
                dirIndex = (dirIndex + 1) % dir.length;
            }
            x += dir[dirIndex][0];
            y += dir[dirIndex][1];
        }
        return list;
    }
    
    private boolean valid(int row, int col, int x, int y, boolean[][] visited) {
        return x < 0 || x >= row ||
            y < 0 || y >= col || visited[x][y] ? false : true;
    }
}