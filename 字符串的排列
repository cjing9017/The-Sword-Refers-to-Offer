/**
运行时间：148ms
占用内存：11996k
*/

import java.util.ArrayList;
public class Solution {
    public ArrayList<String> Permutation(String str) {
        ArrayList<String> result = new ArrayList<>();
        if (str.length() == 0) return result;
        allPermutation(result, new StringBuilder(), new boolean[str.length()], str);
        return result;
    }
    
    private void allPermutation(ArrayList<String> result, StringBuilder sb, 
                               boolean[] visited, String str) {
        if (sb.length() == str.length()) {
            result.add(sb.toString());
            return;
        }
        for (int i = 0; i < str.length(); i++) {
            if (visited[i] || (i > 0 && 
                str.charAt(i) == str.charAt(i - 1) && 
                !visited[i - 1])) continue;
            visited[i] = true;
            sb.append(str.charAt(i));
            allPermutation(result, sb, visited, str);
            sb.deleteCharAt(sb.length() - 1);
            visited[i] = false;
        }
    }
}